//addUser.html file

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add User Details</title>
</head>
<body>
    <form id="userForm">
        <label>Name:</label>
        <input type="text" id="name">
        <label>Email:</label>
        <input type="text" id="email">
        <label>Phone:</label>
        <input type="tel" id="phone">
        <button type="button" onclick="submitForm()">Submit</button>
    </form>

    <ul id="userList"></ul>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.2/axios.min.js"></script>
    <script src="addUser.js"></script>

</body>
</html>

// AddUser.js file

// Function to fetch data from the server and display it on the page
function fetchDataAndDisplay() {
    // Get request from server
    axios.get("https://crudcrud.com/api/8d396461680e4a84b4695fe3b902755d/appointmentdata")
        .then((response) => {
            console.log(response);

            // Display each user on the screen
            response.data.forEach((user) => {
                displayUser(user);
            });
        })
        .catch((error) => {
            console.log(error);
        });
}

// Function to display user details on the screen
function displayUser(user) {
    var userList = document.getElementById('userList');
    var listItem = document.createElement('li');

    // Create delete button and attach event listener
    var deleteButton = document.createElement('button');
    deleteButton.textContent = 'Delete';
    deleteButton.addEventListener('click', function () {
        deleteUser(user);
    });

    // Create edit button and attach event listener
    var editButton = document.createElement('button');
    editButton.textContent = 'Edit';
    editButton.addEventListener('click', function () {
        editUser(user);
    });

    // Display user details, delete button, and edit button
    listItem.textContent = `Name: ${user.name}, Email: ${user.email}, Phone: ${user.phone}`;
    listItem.appendChild(deleteButton);
    listItem.appendChild(editButton);
    userList.appendChild(listItem);
}

// Call the function to fetch data when the page loads
window.onload = fetchDataAndDisplay;

// Function to submit the form and save user details
function submitForm() {
    // Get form values
    var name = document.getElementById('name').value;
    var email = document.getElementById('email').value;
    var phone = document.getElementById('phone').value;

    // Do something with the form values (e.g., add to the list)
    var userList = document.getElementById('userList');
    var listItem = document.createElement('li');

    // Create delete button and attach event listener
    var deleteButton = document.createElement('button');
    deleteButton.textContent = 'Delete';
    deleteButton.addEventListener('click', function () {
        deleteUser({ name, email, phone });
    });

    // Create edit button and attach event listener
    var editButton = document.createElement('button');
    editButton.textContent = 'Edit';
    editButton.addEventListener('click', function () {
        editUser({ name, email, phone });
    });

    // Display user details, delete button, and edit button
    listItem.textContent = 'Name: ' + name + ', Email: ' + email + ', Phone: ' + phone;
    listItem.appendChild(deleteButton);
    listItem.appendChild(editButton);
    userList.appendChild(listItem);

    // Save user details to the server
    axios.post("https://crudcrud.com/api/8d396461680e4a84b4695fe3b902755d/appointmentdata", { name, email, phone })
        .then((response) => {
            console.log(response);
        })
        .catch((err) => {
            console.log(err);
        });

    // Clear the form fields using form ID
    document.getElementById('userForm').reset();
}

// Function to save user details to local storage
function saveToLocalStorage(user) {
    // Retrieve existing users from local storage
    var existingUsers = JSON.parse(localStorage.getItem('users')) || [];

    // Add the new user to the array
    existingUsers.push(user);

    // Save the updated array back to local storage
    localStorage.setItem('users', JSON.stringify(existingUsers));
}

// Function to delete a user
// Function to delete a user
function deleteUser(user) {
    // Remove user from local storage
    var existingUsers = JSON.parse(localStorage.getItem('users')) || [];
    var updatedUsers = existingUsers.filter(function (existingUser) {
        return existingUser.name !== user.name || existingUser.email !== user.email || existingUser.phone !== user.phone;
    });
    localStorage.setItem('users', JSON.stringify(updatedUsers));

    // Remove user from UI
    var userList = document.getElementById('userList');
    var userItems = userList.getElementsByTagName('li');
    for (var i = 0; i < userItems.length; i++) {
        var itemText = userItems[i].textContent;
        if (itemText.includes(user.name) && itemText.includes(user.email) && itemText.includes(user.phone)) {
            userList.removeChild(userItems[i]);
            break;
        }
    }

    // Remove user from the server
    axios.delete("https://crudcrud.com/api/8d396461680e4a84b4695fe3b902755d/appointmentdata/" + user._id)
        .then((response) => {
            console.log(response);


        })
        .catch((error) => {
            console.log(error);


        });
}


    // // Remove user from the server
    // axios.delete("https://crudcrud.com/api/b08d2fc350d44935870aec8854798f18/appointmentdata/" + user._id)
    //     .then((response) => {
    //         console.log(response);
    //     })
    //     .catch((error) => {
    //         console.log(error);
    //     });




// Function to edit a user
function editUser(user) {
    // Remove user from UI
    var userList = document.getElementById('userList');
    var userItems = userList.getElementsByTagName('li');
    for (var i = 0; i < userItems.length; i++) {
        var itemText = userItems[i].textContent;
        if (itemText.includes(user.name) && itemText.includes(user.email) && itemText.includes(user.phone)) {
            userList.removeChild(userItems[i]);
            break;
        }
    }

    // Populate the form with user details for editing
    document.getElementById('name').value = user.name;
    document.getElementById('email').value = user.email;
    document.getElementById('phone').value = user.phone;
}
